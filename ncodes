func callGetHome()
    {
        Utils.showSVProgressHUD()
        
        let dicParam : Parameters = [ "fire_token" : "" , "device_type" : ""]
        
        Alamofire.request("\(Constant.URL_PREFIX)\("get_home")", method: .post , parameters: dicParam , encoding: URLEncoding.httpBody, headers: nil).responseJSON { (response) in
            
            if let json = response.result.value as? [String: Any]
            {
                let dicJson = json as NSDictionary
                //print("Home API: ",dicJson)
                
                Utils.dismissSVProgressHUD()
                
                let status = dicJson["status"] as! Int
                
                if status == 1
                {
                    self.arrServiceProvided.removeAllObjects()
                    self.arrPropertyTypes.removeAllObjects()
                    self.arrSlider.removeAllObjects()
                    self.arrImagesFromarrSlider.removeAll()
                    self.arrNewProject.removeAllObjects()
                    self.arrExclusive.removeAllObjects()
                    
                    let tempSliderArr          = NSMutableArray(array: (dicJson["slider"] as! NSArray))
                    //let tempServiceProvidedArr = NSMutableArray(array: (dicJson["service"] as! NSArray))
                    let tempPropertyTypesArr   = NSMutableArray(array: (dicJson["property_type"] as! NSArray))
                    let tempNewProjectArr      = NSMutableArray(array: (dicJson["new_project"] as! NSArray))
                    
                    self.arrSlider          = NSMutableArray(array: tempSliderArr)
                    //self.arrServiceProvided = NSMutableArray(array: tempServiceProvidedArr)
                    self.arrPropertyTypes   = NSMutableArray(array: tempPropertyTypesArr)
                    self.arrNewProject      = NSMutableArray(array: tempNewProjectArr)
                    self.arrExclusive       = NSMutableArray(array: (dicJson["exclusive"] as! NSArray))
                    
                    for i in 0..<self.arrSlider.count
                    {
                        let dic          = self.arrSlider[i] as! NSDictionary
                        let strImgSlider = (dic["slider_photo"] as! String)
                        self.arrImagesFromarrSlider.append(strImgSlider)
                    }
                    //print(self.arrImagesFromarrSlider)
                    
                    self.tblHomeInfo.reloadData()
                }
                else
                {
                    Utils.dismissSVProgressHUD()
                    Utils.showAlert(controller: self, title: "", message: (dicJson["msg"] as! String))
                    //Utils.showSCAlert(viewController: self, message: dicJson["msg"] as! String)
                }
            }
            else
            {
                Utils.dismissSVProgressHUD()
                Utils.showToastMessage(message: "Error")
            }
        }
    }
    
 ========================================================================================================================================================
 Buttom Click from Tableview Cell in tableview
 
 var btnViewAllclick: ((_ aCell: homeTVCell) -> Void)?
 
 @IBAction func btnViewAllAction(_ sender: UIButton)
     {
        if ((self.btnViewAllclick) != nil)
        {
            self.btnViewAllclick!(self)
        }
}

cell.btnViewAllclick = {(_ aCell: homeTVCell) -> Void in
}

===========================================================================================================================================================

if (indexPath.row == 1)
            {
                guard let tableViewCell = cell as? homeTVCell else { return }
                tableViewCell.setCollectionViewDataSourceDelegate(self, forrow: indexPath.row)
                tableViewCell.collServiceProvidedOffset = storedServiceProvidedOffsets[indexPath.row] ?? 0
            }
    
 =========================================================================================================================================================
 pod 'Alamofire', '~> 4.0'

 
  =========================================================================================================================================================
 pod 'MBProgressHUD'

func ProgressViewShow(uiView:UIView) {
        DispatchQueue.main.async {
            MBProgressHUD.showAdded(to: uiView, animated: true)
        }
    }
    
    func ProgressViewHide(uiView:UIView) {
        DispatchQueue.main.async {
            MBProgressHUD.hide(for:uiView, animated: true)
        }
    }
    
  =========================================================================================================================================================



